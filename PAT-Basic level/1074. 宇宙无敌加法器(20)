1074. 宇宙无敌加法器(20)

时间限制
400 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在PAT星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。
每个PAT星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是7进制数、第2位是2进制数、第3位是5进制数、第4位是10进制数，等等。每一位的进制d或者
是0（表示十进制）、或者是[2，9]区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT星人通常只需要记住前20位就够用了，以后各位
默认为10进制。

在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203+415”呢？我们得首先计算最低位：3+5=8；因为最低位是7
进制的，所以我们得到1和1个进位。第2位是：0+1+1（进位）=2；因为此位是2进制的，所以我们得到0和1个进位。第3位是：2+4+1（进位）=7；因为此位是5进制的，
所以我们得到2和1个进位。第4位是：6+1（进位）=7；因为此位是10进制的，所以我们就得到7。最后我们得到：6203+415=7201。

输入格式：

输入首先在第一行给出一个N位的进制表（0 < N <=20），以回车结束。 随后两行，每行给出一个不超过N位的正的PAT数。

输出格式：

在一行中输出两个PAT数之和。

输入样例：
30527
06203
415
输出样例：
7201

#include<bits/stdc++.h>
using namespace std;
char n[30],a[30],b[30];
int l1,l2,l3,ben,jin;
int num1[30],num2[30],num3[30],num4[30],k,t;
int main()
{
    scanf("%s",n);
    l1=strlen(n);
    for(int i=l1-1;i>=0;i--)//用数组存取进制数 
        if(n[i]!='0')
             num1[l1-i-1]=n[i]-'0';
             else
             num1[l1-1-i]=n[i]-'0'+10;
    scanf("%s",a);
    l2=strlen(a);
    for(int j=l2-1;j>=0;j--)//把字符串转化为整数 
           num2[l2-1-j]=a[j]-'0';
    scanf("%s",b);
    l3=strlen(b);
        for(int i=l3-1;i>=0;i--)//把字符串转化为整数 
           num3[l3-1-i]=b[i]-'0';
           k=l2>l3?l2:l3;
           for(int i=0;i<k;i++)//和大整数的加法差不多 
              t=num2[i]+num3[i],num2[i]=t%num1[i],num2[i+1]+=t/num1[i];
          while(!num2[k]&&k)k--;//去掉前置0 
              for(;k>=0;k--)
                  printf("%d",num2[k]);
        return 0;
}
