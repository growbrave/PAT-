1065. 单身狗(25)
“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。

输入格式：

输入第一行给出一个正整数N（<=50000），是已知夫妻/伴侣的对数；随后N行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个ID号，为5位数字（从00000到
99999），ID间以空格分隔；之后给出一个正整数M（<=10000），为参加派对的总人数；随后一行给出这M位客人的ID，以空格分隔。题目保证无人重婚或脚踩两条船。

输出格式：

首先第一行输出落单客人的总人数；随后第二行按ID递增顺序列出落单的客人。ID间用1个空格分隔，行的首尾不得有多余空格。

输入样例：
3
11111 22222
33333 44444
55555 66666
7
55555 44444 10000 88888 22222 11111 23333
输出样例：
5
10000 23333 44444 55555 88888


//时间复杂度有点高，毕竟是通过大集合找小集合，查找次数太多
#include <iostream>
#include <vector>
#include <set>

using namespace std;

struct partener
{
	int husband;
	int wife;
};

int main()
{
	int n,m,temp;
	cin>>n;
	vector<partener> a(n);
	for(int i=0;i<n;i++)
		cin>>a[i].husband>>a[i].wife;
	cin>>m;
	set<int> s;
	set<int> ::iterator it;
	int t=0;
	for(int i=0;i<m;i++)
	{
		cin>>temp;
		s.insert(temp);
	}
	for(int i=0;i<n;i++)//查找有伴侣的删除之
		if(s.find(a[i].husband)!=s.end())
			if(s.find(a[i].wife)!=s.end())
			{
				s.erase(a[i].husband);
				s.erase(a[i].wife);
			}
	cout<<s.size()<<endl;
	for(it=s.begin();it!=s.end();it++ )
	{
		if(it!=s.begin())
			cout<<" ";
		printf("%05d",*it);
	}
	return 0;
}
