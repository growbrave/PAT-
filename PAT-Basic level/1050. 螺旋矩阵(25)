1050. 螺旋矩阵(25)
本题要求将给定的N个正整数按非递增的顺序，填入“螺旋矩阵”。所谓“螺旋矩阵”，是指从左上角第1个格子开始，按顺时针螺旋方向填充。要求矩阵的规模为m行n列，满足条件：m*n等于N；m>=n；且m-n取所有可能值中的最小值。
输入格式：
输入在第1行中给出一个正整数N，第2行给出N个待填充的正整数。所有数字不超过104，相邻数字以空格分隔。
输出格式：
输出螺旋矩阵。每行n个数字，共m行。相邻数字以1个空格分隔，行末不得有多余空格。
输入样例：
12
37 76 20 98 76 42 53 95 60 81 58 93
输出样例：
98 95 93
42 37 81
53 20 76
58 60 76

#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int cmp(int a,int b)
{
	return a>b;
}

int findm(int a)
{
	int b=sqrt(a);
	int c=b;
	do{
		c+=1;
		if(a==b*b)
			return b;
		if(a<b*c)
		{
			c=b;
			b=b-1;
		}

	}while(a!=b*c);
	return c;
}

int main()
{
	int num,m,n,i=0,j=0,k=0;
	cin>>num;
	vector<int> a(num);
	for(int i=0;i<num;i++)
		cin>>a[i];
	sort(a.begin(),a.end(),cmp);
	m=findm(num);
	n=num/m;
	vector<vector<int>> b(m,(vector<int>(n)));
	b[i][j]=a[k++];
	while(k<num){   
        while(j+1<n&&!b[i][j+1])    b[i][++j]=a[k++];
        while(i+1<m&&!b[i+1][j])    b[++i][j]=a[k++];
        while(j-1>=0&&!b[i][j-1])   b[i][--j]=a[k++];
        while(i-1>=0&&!b[i-1][j])   b[--i][j]=a[k++];
    }
	for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(j!=0)
                cout<<" ";  
            cout<<b[i][j];
        }       
            cout<<endl;
    }
	return 0;
}
